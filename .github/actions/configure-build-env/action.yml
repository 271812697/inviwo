name: 'Configure Inviwo Build environment'
description: 'Configure vcpkg and ccache'

inputs:
  triplet:
    description: 'Vcpkg triplet to use'
    required: true
  configuration:
    description: 'Configuration to use'
    required: true
  ccache:
    description: 'Setup ccache'
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - name: "Setup MSVC"
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: "Get Vcpkg SHA"
      shell: bash
      run: |
        SHA=`jq -r '.["vcpkg-configuration"].["default-registry"].baseline' inviwo/vcpkg.json`
        echo "VCPKG_SHA=${SHA}" >> $GITHUB_ENV

    - name: "Clone Vcpkg"
      uses: actions/checkout@v4
      with:
        repository: microsoft/vcpkg
        ref: ${{ env.VCPKG_SHA }}
        path: vcpkg

    - name: "Patch vcpkg"
      shell: bash
      run: |
        cd vcpkg
        git config --global user.name 'Inviwo-Team'
        git config --global user.email 'team@inviwo.org'
        git apply ../inviwo/tools/vcpkg/39889.patch

    - name: "VCPKG Update"
      shell: bash
      run: |
        cd vcpkg
        ./bootstrap-vcpkg.sh
        echo "VCPKG_INSTALLATION_ROOT=`pwd`" >> $GITHUB_ENV
        echo "VCPKG_ROOT=`pwd`" >> $GITHUB_ENV

    - name: "Setup Ccache"
      id: ccache
      if: inputs.ccache
      uses: petersteneteg/ccache-action@v1.1.0
      with:
        variant: ccache
        max-size: "1500M"
        verbose: 2
        save: ${{github.ref == 'refs/heads/master'}}
        append-timestamp: true
        key: inviwo-${{ inputs.triplet }}-${{ inputs.configuration }}-
        restore-keys: |
          inviwo-${{ inputs.triplet }}-${{ inputs.configuration }}-

    - name: "Copy ccache"
      shell: bash
      if: runner.os == 'Windows' && inputs.ccache
      run: |
        mkdir build
        cp ${{ steps.ccache.outputs.executable }} build/cl.exe
