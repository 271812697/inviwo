if(NOT DEFINED VCPKG_TARGET_TRIPLET)
    if(CMAKE_HOST_APPLE)
        # cmake flags for CMAKE_SYSTEM_PROCESSOR etc, are usually not
        # around before the first call to project, which is to late.
        execute_process(
            COMMAND uname -m
            OUTPUT_VARIABLE HOST_ARCH
            OUTPUT_STRIP_TRAILING_WHITESPACE
        )
        if(HOST_ARCH STREQUAL "arm64")
            if (BUILD_SHARED_LIBS)
                set(VCPKG_TARGET_TRIPLET arm64-osx-dynamic)
            else()
                set(VCPKG_TARGET_TRIPLET arm64-osx)
            endif()
        else()
            if (BUILD_SHARED_LIBS)
                set(VCPKG_TARGET_TRIPLET x64-osx-dynamic)
            else()
                set(VCPKG_TARGET_TRIPLET x64-osx)
            endif()
        endif()
    elseif(CMAKE_HOST_LINUX)
        if (BUILD_SHARED_LIBS)
            set(VCPKG_TARGET_TRIPLET x64-linux-dynamic)
        else()
            set(VCPKG_TARGET_TRIPLET x64-linux)
        endif()
    elseif(CMAKE_HOST_WIN32)
        if (BUILD_SHARED_LIBS)
            set(VCPKG_TARGET_TRIPLET x64-windows)
        elseif(IVW_CFG_MSVC_FORCE_SHARED_CRT)
            set(VCPKG_TARGET_TRIPLET x64-windows x64-windows-static-md)
        else()
            set(VCPKG_TARGET_TRIPLET x64-windows-static)
        endif()
    endif()
endif()
if(NOT DEFINED VCPKG_HOST_TRIPLET)
    set(VCPKG_HOST_TRIPLET ${VCPKG_TARGET_TRIPLET})
endif()

message(STATUS "BUILD_SHARED_LIBS: ${BUILD_SHARED_LIBS}")
message(STATUS "VCPKG_TARGET_TRIPLET: ${VCPKG_TARGET_TRIPLET}")
message(STATUS "VCPKG_HOST_TRIPLET: ${VCPKG_HOST_TRIPLET}")
