<?xml version="1.0" encoding="UTF-8" ?>
<InviwoWorkspace version="3">
    <InviwoSetup>
        <Modules>
            <Module name="OpenGL" version="0">
                <Processors>
                    <Processor content="org.inviwo.CanvasGL"/>
                </Processors>
            </Module>
            <Module name="BrushingAndLinking" version="0">
                <Processors>
                    <Processor content="org.inviwo.BrushingAndLinkingProcessor"/>
                </Processors>
            </Module>
            <Module name="DataFrame" version="0">
                <Processors>
                    <Processor content="org.inviwo.SyntheticDataFrame"/>
                </Processors>
            </Module>
            <Module name="DataFrameQt" version="0">
                <Processors>
                    <Processor content="org.inviwo.DataFrameTable"/>
                </Processors>
            </Module>
            <Module name="WebBrowser" version="0">
                <Processors>
                    <Processor content="org.inviwo.BasicWebBrowser"/>
                </Processors>
            </Module>
        </Modules>
    </InviwoSetup>
    <ProcessorNetwork>
        <ProcessorNetworkVersion content="21"/>
        <Processors>
            <Processor type="org.inviwo.SyntheticDataFrame" identifier="SyntheticDataFrame" displayName="Synthetic DataFrame">
                <PortGroups/>
                <Properties>
                    <Property type="org.inviwo.Size_tProperty" identifier="numRow">
                        <MetaDataMap>
                            <MetaDataItem type="org.inviwo.StringStringStdUnorderedMapMetaData" key="SavedState"/>
                        </MetaDataMap>
                        <maxvalue content="20"/>
                        <value content="10"/>
                    </Property>
                    <Property type="org.inviwo.CompositeProperty" identifier="randomParams">
                        <Properties>
                            <Property type="org.inviwo.IntProperty" identifier="seed">
                                <MetaDataMap>
                                    <MetaDataItem type="org.inviwo.StringStringStdUnorderedMapMetaData" key="SavedState"/>
                                </MetaDataMap>
                                <value content="194"/>
                            </Property>
                        </Properties>
                    </Property>
                </Properties>
                <MetaDataMap>
                    <MetaDataItem type="org.inviwo.ProcessorMetaData" key="org.inviwo.ProcessorMetaData">
                        <position x="14400" y="-1525"/>
                        <visibility content="1"/>
                        <selection content="0"/>
                    </MetaDataItem>
                </MetaDataMap>
            </Processor>
            <Processor type="org.inviwo.BrushingAndLinkingProcessor" identifier="BrushingAndLinkingProcessor" displayName="Brushing And Linking Processor">
                <PortGroups/>
                <Properties/>
                <MetaDataMap>
                    <MetaDataItem type="org.inviwo.ProcessorMetaData" key="org.inviwo.ProcessorMetaData">
                        <position x="14575" y="-1525"/>
                        <visibility content="1"/>
                        <selection content="0"/>
                    </MetaDataItem>
                </MetaDataMap>
            </Processor>
            <Processor type="org.inviwo.CanvasGL" identifier="Canvas" displayName="Canvas">
                <PortGroups/>
                <Properties>
                    <Property type="org.inviwo.CompositeProperty" identifier="inputSize">
                        <Properties>
                            <Property type="org.inviwo.IntSize2Property" identifier="customInputDimensions">
                                <readonly content="1"/>
                                <value x="713" y="745"/>
                            </Property>
                        </Properties>
                    </Property>
                    <Property type="org.inviwo.IntProperty" identifier="colorLayer_">
                        <displayName content="Color Layer ID"/>
                        <semantics semantics="Default"/>
                        <visible content="0"/>
                        <readonly content="0"/>
                        <minConstraint content="2"/>
                        <maxConstraint content="1"/>
                        <minvalue content="0"/>
                        <maxvalue content="0"/>
                        <increment content="1"/>
                        <value content="0"/>
                    </Property>
                    <Property type="org.inviwo.DirectoryProperty" identifier="layerDir">
                        <absolutePath content=""/>
                        <workspaceRelativePath content=""/>
                        <ivwdataRelativePath content=""/>
                    </Property>
                </Properties>
                <MetaDataMap>
                    <MetaDataItem type="org.inviwo.ProcessorMetaData" key="org.inviwo.ProcessorMetaData">
                        <position x="14575" y="-1375"/>
                        <visibility content="1"/>
                        <selection content="0"/>
                    </MetaDataItem>
                    <MetaDataItem type="org.inviwo.ProcessorWidgetMetaData" key="org.inviwo.ProcessorWidgetMetaData">
                        <position x="1119" y="937"/>
                        <dimensions x="800" y="800"/>
                        <visibility content="1"/>
                        <fullScreen content="0"/>
                        <onTop content="1"/>
                    </MetaDataItem>
                </MetaDataMap>
            </Processor>
            <Processor type="org.inviwo.DataFrameTable" identifier="DataFrameTable" displayName="DataFrame Table">
                <PortGroups/>
                <Properties/>
                <MetaDataMap>
                    <MetaDataItem type="org.inviwo.ProcessorMetaData" key="org.inviwo.ProcessorMetaData">
                        <position x="14400" y="-1450"/>
                        <visibility content="1"/>
                        <selection content="0"/>
                    </MetaDataItem>
                    <MetaDataItem type="org.inviwo.ProcessorWidgetMetaData" key="org.inviwo.ProcessorWidgetMetaData">
                        <position x="209" y="619"/>
                        <dimensions x="1187" y="351"/>
                        <visibility content="0"/>
                        <fullScreen content="0"/>
                        <onTop content="1"/>
                    </MetaDataItem>
                </MetaDataMap>
            </Processor>
            <Processor type="org.inviwo.BasicWebBrowser" identifier="BasicWebBrowser" displayName="Basic Web Browser">
                <PortGroups/>
                <Properties>
                    <Property type="org.inviwo.StringProperty" identifier="html">
                        <MetaDataMap>
                            <MetaDataItem type="org.inviwo.IntMetaData" key="PropertyEditorWidgetDockStatus">
                                <MetaData content="0"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetFloating">
                                <MetaData content="1"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.IntVec2MetaData" key="PropertyEditorWidgetPosition">
                                <MetaData x="553" y="223"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.IntVec2MetaData" key="PropertyEditorWidgetSize">
                                <MetaData x="1134" y="999"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetSticky">
                                <MetaData content="0"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetVisible">
                                <MetaData content="0"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.StringStringStdUnorderedMapMetaData" key="SavedState"/>
                        </MetaDataMap>
                        <value content='&lt;!DOCTYPE html&gt;&#x0A;&lt;html&gt;&#x0A;  &lt;head&gt;&#x0A;    &lt;meta charset=&quot;utf-8&quot;&gt;&#x0A;    &#x0A;    &lt;!--&#x0A;    * &quot;https://inviwo/yourmodulename/&quot; will be redirected to the&#x0A;        corresponding module directory.&#x0A;    * &quot;https://inviwo/app/&quot; will be redirected to the application&#x0A;        base path (InviwoApplication::getBasePath()) directory&#x0A;    * &quot;https://inviwo/app/static/code.js&quot; resolves to the JavaScript &#x0A;        property of this processor&#x0A;    --&gt;&#x0A;&#x0A;&#x0A;    &lt;style&gt;&#x0A;      body {&#x0A;        font-family: sans-serif;&#x0A;        overflow: hidden;&#x0A;        background: white;&#x0A;      }&#x0A;      .tooltip {&#x0A;        font-family: sans-serif;&#x0A;        font-size: 90%;&#x0A;        position: absolute;&#x0A;        background-color: white;&#x0A;        border: solid;&#x0A;        border-width: 2px;&#x0A;        border-radius: 5px;&#x0A;        padding: 5px;&#x0A;      }&#x0A;    &lt;/style&gt;&#x0A;  &lt;/head&gt;&#x0A;&#x0A;  &lt;body&gt;&#x0A;    &lt;!-- Create a div where the graph will take place --&gt;&#x0A;    &lt;div id=&quot;my_dataviz&quot;&gt;&lt;/div&gt;&#x0A;  &lt;/body&gt;&#x0A;&#x0A;  &lt;script type=&quot;module&quot;&gt;&#x0A;    // load the javascript code associated with the processor&#x0A;    import * as code from &quot;https://inviwo/app/static/code.js&quot;&#x0A;  &lt;/script&gt;&#x0A;&lt;/html&gt;'/>
                    </Property>
                    <Property type="org.inviwo.StringProperty" identifier="code">
                        <MetaDataMap>
                            <MetaDataItem type="org.inviwo.IntMetaData" key="PropertyEditorWidgetDockStatus">
                                <MetaData content="0"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetFloating">
                                <MetaData content="1"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.IntVec2MetaData" key="PropertyEditorWidgetPosition">
                                <MetaData x="2012" y="599"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.IntVec2MetaData" key="PropertyEditorWidgetSize">
                                <MetaData x="1054" y="1159"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetSticky">
                                <MetaData content="0"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.BoolMetaData" key="PropertyEditorWidgetVisible">
                                <MetaData content="1"/>
                            </MetaDataItem>
                            <MetaDataItem type="org.inviwo.StringStringStdUnorderedMapMetaData" key="SavedState"/>
                        </MetaDataMap>
                        <value content='// Load the inviwo javascript api&#x0A;import * as inviwo from &quot;https://inviwo/webbrowser/data/js/inviwoapiv2.js&quot;&#x0A;import * as heatmap from &quot;https://inviwo/webbrowser/data/js/heatmap.js&quot;&#x0A;import * as d3 from &quot;https://cdn.jsdelivr.net/npm/d3@7/+esm&quot;;&#x0A;&#x0A;&#x0A;&#x0A;async function createPlot(self) {&#x0A;    const json = await self.inport(&quot;dataframe&quot;).getData();&#x0A;    if (json instanceof Object) {&#x0A;        const data = heatmap.createPivotTable(json);&#x0A;        const range = [&#x0A;            data.reduce((acc, {value: v}) =&gt; Math.min(acc, v), Number.MAX_VALUE),&#x0A;            data.reduce((acc, {value: v}) =&gt; Math.max(acc, v), -Number.MAX_VALUE)&#x0A;        ];&#x0A;&#x0A;        const holder = d3.select(&quot;#my_dataviz&quot;);&#x0A;        holder.selectAll(&quot;*&quot;).remove();&#x0A;&#x0A;        const size = {width: globalThis.innerWidth, height: globalThis.innerHeight};&#x0A;        const margin = {top: 10, right: 10, bottom: 80, left: 40};&#x0A;    &#x0A;        const plot = heatmap.plot(holder, data, range, size, margin, d3.interpolateInferno);&#x0A;        const tooltip = holder.append(&quot;div&quot;).style(&quot;opacity&quot;, 0).attr(&quot;class&quot;, &quot;tooltip&quot;);&#x0A;&#x0A;        plot.grid.selectAll(&quot;rect&quot;)&#x0A;            .on(&quot;mouseover&quot;, async (e, d) =&gt; {&#x0A;                tooltip.transition().duration(250).style(&quot;opacity&quot;, 1);&#x0A;                await self.inport(&quot;brushing&quot;).highlight([d.rowIndex], &quot;row&quot;);&#x0A;                await self.inport(&quot;brushing&quot;).highlight([d.colIndex], &quot;column&quot;);&#x0A;            })&#x0A;            .on(&quot;mousemove&quot;, async (e, d) =&gt; {&#x0A;                tooltip.html(`&lt;b&gt;${d.col}, ${d.row}&lt;br&gt;col: ${d.colIndex}, row: ${d.rowIndex}:&lt;/b&gt; ${d.value}`);&#x0A;                const vpos = event.x &lt; globalThis.innerWidth / 2 ? event.x + 10 :  event.x - 10 - tooltip.node().offsetWidth;&#x0A;                const hpos = event.y &lt; globalThis.innerHeight / 2 ? event.y + 10 : event.y - 10 - tooltip.node().offsetHeight;    &#x0A;                tooltip.style(&quot;left&quot;, vpos + &quot;px&quot;).style(&quot;top&quot;, hpos + &quot;px&quot;)&#x0A;            })&#x0A;            .on(&quot;mouseleave&quot;, async (e, d) =&gt; {&#x0A;                tooltip.transition().duration(250).style(&quot;opacity&quot;, 0);&#x0A;                await self.inport(&quot;brushing&quot;).highlight([]);&#x0A;            });&#x0A;        return plot;&#x0A;    }&#x0A;}&#x0A;&#x0A;&#x0A;&#x0A;&#x0A;// Put the inviwo module into global scope so that the api can interact with in from c++&#x0A;globalThis.inviwo = inviwo&#x0A;&#x0A;// Register a function for inviwo to call on processor process&#x0A;// The function will be called with an instance of the processor.&#x0A;// The processor has the following properties:&#x0A;//  * changedInports: A list of the identifiers for all the port that has changed&#x0A;//  * changedProperties A list of the identifiers for all the identifiers that has changed&#x0A;//  * self.changedBrushing A list of the modified brushing targets that has changed&#x0A;//  * loaded a boolean specifying if the webpage was just loaded&#x0A;// Then there are the standard processor functions&#x0A;//  * properties()&#x0A;//  * property(identifier)&#x0A;//  * inports()&#x0A;//  * inport(identifier)&#x0A;//  * outports()&#x0A;//  * outport(identifier)&#x0A;globalThis.inviwoProcess = async function (self) {&#x0A;    try {&#x0A;        if (self.changedInports.includes(&quot;dataframe&quot;) || self.loaded || !(&quot;plot&quot; in this)) {&#x0A;            this.plot = await createPlot(self);             &#x0A;        }&#x0A;&#x0A;        globalThis.addEventListener(&quot;resize&quot;, async () =&gt; {&#x0A;            this.plot = await createPlot(self);      &#x0A;        });&#x0A;&#x0A;        if (&quot;plot&quot; in this &amp;&amp; (self.changedBrushing.map((x) =&gt; x[1]).includes(&quot;Highlighted&quot;)&#x0A;            || self.changedProperties.includes(&quot;color&quot;)&#x0A;            || self.loaded)) {&#x0A;&#x0A;            const color = await self.property(&quot;extra&quot;).property(&quot;color&quot;).get();&#x0A;            const highlightedRows = await self.inport(&quot;brushing&quot;).getHighlightedIndices(&quot;row&quot;);&#x0A;            const highlightedCols = await self.inport(&quot;brushing&quot;).getHighlightedIndices(&quot;column&quot;);&#x0A;&#x0A;            this.plot.grid.selectAll(&quot;rect&quot;)&#x0A;                .transition().duration(100)&#x0A;                .style(&quot;stroke&quot;, function(d) {&#x0A;                    if (highlightedRows.includes(d.rowIndex) || highlightedCols.includes(d.colIndex)) {&#x0A;                        return heatmap.rgba(color.value);&#x0A;                    } else {&#x0A;                        return &quot;transparent&quot;;&#x0A;                    }&#x0A;                });&#x0A;        }&#x0A;    } catch(e) {&#x0A;        if (e instanceof Error) {&#x0A;            console.error(e.stack)&#x0A;        } else {&#x0A;            console.error(JSON.stringify(e))&#x0A;        }&#x0A;    }&#x0A;}&#x0A;'/>
                    </Property>
                    <Property type="org.inviwo.DoubleProperty" identifier="zoom">
                        <value content="1.6"/>
                    </Property>
                    <Property type="org.inviwo.OptionPropertyString" identifier="propertyTypes">
                        <selectedIdentifier content="org.inviwo.FloatVec4Property"/>
                    </Property>
                    <Property type="org.inviwo.StringProperty" identifier="name">
                        <value content="color"/>
                    </Property>
                    <Property type="org.inviwo.CompositeProperty" identifier="extra">
                        <OwnedPropertyIdentifiers>
                            <PropertyIdentifier content="color"/>
                        </OwnedPropertyIdentifiers>
                        <Properties>
                            <Property type="org.inviwo.FloatVec4Property" identifier="color">
                                <displayName content="color"/>
                                <semantics semantics="Color"/>
                                <visible content="1"/>
                                <readonly content="0"/>
                                <MetaDataMap>
                                    <MetaDataItem type="org.inviwo.StringStringStdUnorderedMapMetaData" key="SavedState"/>
                                </MetaDataMap>
                                <minConstraint content="0"/>
                                <maxConstraint content="0"/>
                                <minvalue x="0" y="0" z="0" w="0"/>
                                <maxvalue x="1" y="1" z="1" w="1"/>
                                <increment x="0.01" y="0.01" z="0.01" w="0.01"/>
                                <value x="0.29803923" y="0.047058824" z="0.2901961" w="1"/>
                            </Property>
                        </Properties>
                    </Property>
                </Properties>
                <MetaDataMap>
                    <MetaDataItem type="org.inviwo.ProcessorMetaData" key="org.inviwo.ProcessorMetaData">
                        <position x="14575" y="-1450"/>
                        <visibility content="1"/>
                        <selection content="0"/>
                    </MetaDataItem>
                </MetaDataMap>
            </Processor>
        </Processors>
        <Connections>
            <Connection src="BasicWebBrowser.webpage" dst="Canvas.inport"/>
            <Connection src="SyntheticDataFrame.dataFrame_" dst="BasicWebBrowser.dataframe"/>
            <Connection src="SyntheticDataFrame.dataFrame_" dst="DataFrameTable.inport"/>
            <Connection src="BrushingAndLinkingProcessor.outport" dst="DataFrameTable.brushingAndLinking"/>
            <Connection src="BrushingAndLinkingProcessor.outport" dst="BasicWebBrowser.brushing"/>
        </Connections>
        <PropertyLinks/>
    </ProcessorNetwork>
    <PortInspectors/>
    <WorkspaceAnnotations>
        <Properties>
            <Property type="org.inviwo.StringProperty" identifier="author">
                <value content="Inviwo Team"/>
            </Property>
            <Property type="org.inviwo.StringProperty" identifier="tags">
                <value content="Example;"/>
            </Property>
            <Property type="org.inviwo.StringProperty" identifier="categories">
                <value content="Examples;"/>
            </Property>
        </Properties>
        <Canvases>
            <CanvasImage>
                <name content="Canvas"/>
                <size x="256" y="256"/>
                <base64 content=""/>
            </CanvasImage>
        </Canvases>
        <Network>
            <name content="Network"/>
            <size x="256" y="256"/>
            <base64 content="/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAEAAQADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwAooorQAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACor37YLOU6cIvtHlt5Hn52b8cbsc4zjOOalooA5/wxqPxDn1qew8X6VpsdvHbK8dzpwl2tKTyoLscgD2/E10FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/2Q=="/>
        </Network>
    </WorkspaceAnnotations>
    <AnimationController>
        <Properties>
            <Property type="org.inviwo.CompositeProperty" identifier="PlayOptions">
                <Properties/>
                <collapsed content="1"/>
            </Property>
            <Property type="org.inviwo.CompositeProperty" identifier="RenderOptions">
                <Properties>
                    <Property type="org.inviwo.BoolCompositeProperty" identifier="image">
                        <Properties>
                            <Property type="org.inviwo.DirectoryProperty" identifier="outputDirectory">
                                <absolutePath content=""/>
                                <workspaceRelativePath content=""/>
                                <ivwdataRelativePath content=""/>
                            </Property>
                        </Properties>
                    </Property>
                    <Property type="org.inviwo.BoolCompositeProperty" identifier="ffmpeg">
                        <Properties>
                            <Property type="org.inviwo.FileProperty" identifier="file">
                                <absolutePath content=""/>
                                <workspaceRelativePath content=""/>
                                <ivwdataRelativePath content=""/>
                            </Property>
                        </Properties>
                    </Property>
                    <Property type="org.inviwo.BoolCompositeProperty" identifier="exporter">
                        <Properties>
                            <Property type="org.inviwo.DirectoryProperty" identifier="outputDirectory">
                                <absolutePath content=""/>
                                <workspaceRelativePath content=""/>
                                <ivwdataRelativePath content=""/>
                            </Property>
                        </Properties>
                    </Property>
                </Properties>
                <collapsed content="1"/>
            </Property>
            <Property type="org.inviwo.CompositeProperty" identifier="controlOptions">
                <Properties/>
                <collapsed content="1"/>
            </Property>
        </Properties>
    </AnimationController>
    <MainAnimationIndex content="0"/>
    <Animations>
        <Animation>
            <name content="Animation 1"/>
        </Animation>
    </Animations>
</InviwoWorkspace>
